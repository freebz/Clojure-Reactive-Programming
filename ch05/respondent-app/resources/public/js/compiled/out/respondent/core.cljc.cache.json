["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "],"~$Error",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros","~$go-loop","^7","~$behavior","~$respondent.core"],"~:excludes",["~#set",["~$map","~$deliver","~$filter"]],"~:name","^:","~:imports",null,"~:requires",["^ ","~$async","~$cljs.core.async","^D","^D"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$timeout","^D","~$<!","^D","~$close!","^D","~$chan","^D","~$tap","^D","~$map>","^D","~$>!","^D","~$filter>","^D","~$untap","^D","~$mult","^D"],"~:defs",["^ ","~$IEventStream",["^ ","~:meta",["^ ","~:file","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","~:line",31,"~:column",14,"~:end-line",31,"~:end-column",26,"~:doc",null,"~:protocol-symbol",true,"~:jsdoc",["~#list",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","^=",[["~$s","~$f"]],"^?",[["~$s","~$pred"]],"~$flatmap",[["~$s","~$f"]],"^>",[["~$s","~$value"]],"~$completed?",[["~$s"]]]]],"^Z",true,"^@","~$respondent.core/IEventStream","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",26,"^V",1,"^U",31,"^11",["^ ","^12",["^ ","^=",[["~$s","~$f"]],"^?",[["~$s","^13"]],"^14",[["~$s","~$f"]],"^>",[["~$s","^15"]],"^16",[["~$s"]]]],"~:info",null,"^W",31,"~:tag","~$any","~:impls",["^<",["~$respondent.core/EventStream"]],"^Y",null,"^[",["^10",["@interface"]]],"~$event-stream",["^ ","~:protocol-inline",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",107,"^V",7,"^W",107,"^X",19,"~:arglists",["^10",["~$quote",["^10",[[],["~$ch"]]]]],"^Y","Creates and returns a new event stream. You can optionally provide an existing\n  core.async channel as the source for the new stream","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",1,"~:method-params",["^10",[[],["^1A"]]],"^1?",["^10",[[],["^1A"]]],"~:arglists-meta",["^10",[null,null]]]],"^@","~$respondent.core/event-stream","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",19,"^1B",["^ ","^1C",false,"^1D",1,"^1E",["^10",[[],["^1A"]]],"^1?",["^10",[[],["^1A"]]],"^1F",["^10",[null,null]]],"^1E",["^10",[[],["^1A"]]],"~:protocol-impl",null,"^1F",["^10",[null,null]],"^V",1,"^U",107,"^W",107,"^1D",1,"~:fn-var",true,"^1?",["^10",[[],["^1A"]]],"^Y","Creates and returns a new event stream. You can optionally provide an existing\n  core.async channel as the source for the new stream"],"~$subscribe",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",47,"^V",4,"^W",47,"^X",13,"~:protocol","~$respondent.core/IObservable","^Y","Register a callback to be invoked when the underlying source changes.\n                      Returns a token the subscriber can use to cancel the subscription.","^1?",["^10",["^1@",["^10",[["~$obs","~$f"]]]]]],"^1K","^1L","^@","~$respondent.core/subscribe","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",13,"^1E",["^10",[["^1M","~$f"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",46,"^W",47,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["^1M","~$f"]]]]],"^Y","Register a callback to be invoked when the underlying source changes.\n                      Returns a token the subscriber can use to cancel the subscription."],"^=",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",32,"^V",4,"^W",32,"^X",7,"^1K","^17","^Y","Returns a new stream containing the result of applying f\n     to the values in s","^1?",["^10",["^1@",["^10",[["~$s","~$f"]]]]]],"^1K","^17","^@","~$respondent.core/map","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",7,"^1E",["^10",[["~$s","~$f"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",31,"^W",32,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$s","~$f"]]]]],"^Y","Returns a new stream containing the result of applying f\n     to the values in s"],"~$IToken",["^ ","^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",50,"^V",14,"^W",50,"^X",20,"^Y",null,"^Z",true,"^[",["^10",["@interface"]],"^11",["^ ","^12",["^ ","~$dispose",[["~$tk"]]]]],"^Z",true,"^@","~$respondent.core/IToken","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",20,"^V",1,"^U",50,"^11",["^ ","^12",["^ ","^1Q",[["^1R"]]]],"^18",null,"^W",50,"^19","^1:","^1;",["^<",["~$respondent.core/Token"]],"^Y",null,"^[",["^10",["@interface"]]],"^>",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",41,"^V",4,"^W",41,"^X",11,"^1K","^17","^Y","delivers a value to the stream s","^1?",["^10",["^1@",["^10",[["~$s","^15"]]]]]],"^1K","^17","^@","~$respondent.core/deliver","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",11,"^1E",["^10",[["~$s","^15"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",31,"^W",41,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$s","^15"]]]]],"^Y","delivers a value to the stream s"],"^16",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",43,"^V",4,"^W",43,"^X",14,"^1K","^17","^Y","Returns true if this stream has stopped emitting values. False otherwise.","^1?",["^10",["^1@",["^10",[["~$s"]]]]]],"^1K","^17","^@","~$respondent.core/completed?","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",14,"^1E",["^10",[["~$s"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",31,"^W",43,"^1D",1,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$s"]]]]],"^Y","Returns true if this stream has stopped emitting values. False otherwise."],"~$IObservable",["^ ","^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",46,"^V",14,"^W",46,"^X",25,"^Y",null,"^Z",true,"^[",["^10",["@interface"]],"^11",["^ ","^12",["^ ","^1J",[["^1M","~$f"]]]]],"^Z",true,"^@","^1L","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",25,"^V",1,"^U",46,"^11",["^ ","^12",["^ ","^1J",[["^1M","~$f"]]]],"^18",null,"^W",46,"^19","^1:","^1;",["^<",["^1<"]],"^Y",null,"^[",["^10",["@interface"]]],"~$from-interval",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",118,"^V",7,"^W",118,"^X",20,"^1?",["^10",["^1@",["^10",[["~$msecs"],["^1Y","~$seed","~$succ"]]]]],"^Y","Creates and returns a new event stream which emits values at the given interval.\n   If no other arguments are given, the values start at 0 and increment by one at each delivery.\n   \n   If given seed and succ it emits seed and applies succ to seed to get the next value. It then\n   applies succ to the previous result and so on.","^1B",["^ ","^1C",false,"^1D",3,"^1E",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^1?",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^1F",["^10",[null,null]]]],"^@","~$respondent.core/from-interval","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",20,"^1B",["^ ","^1C",false,"^1D",3,"^1E",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^1?",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^1F",["^10",[null,null]]],"^1E",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",118,"^W",118,"^1D",3,"^1I",true,"^1?",["^10",[["^1Y"],["^1Y","^1Z","^1["]]],"^Y","Creates and returns a new event stream which emits values at the given interval.\n   If no other arguments are given, the values start at 0 and increment by one at each delivery.\n   \n   If given seed and succ it emits seed and applies succ to seed to get the next value. It then\n   applies succ to the previous result and so on."],"~$Token",["^ ","~:num-fields",1,"~:protocols",["^<",["^1S"]],"^@","^1T","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",15,"~:type",true,"^V",10,"^U",54,"~:record",false,"^W",54,"~:skip-protocol-flag",null],"~$->Behavior",["^ ","^1>",null,"^S",["^ ","^23",["^<",["~$cljs.core/IDeref","~$respondent.core/IBehavior"]],"^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^X",18,"^V",10,"~:factory","~:positional","^U",20,"^W",20,"^1?",["^10",["^1@",["^10",[["~$f"]]]]],"^26",["^<",["^28"]],"^Y","Positional factory function for respondent.core/Behavior."],"^23",["^<",["^28","^29"]],"^@","~$respondent.core/->Behavior","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",18,"^1E",["^10",[["~$f"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^2:","^2;","^U",20,"^W",20,"^1D",1,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$f"]]]]],"^26",["^<",["^28"]],"^Y","Positional factory function for respondent.core/Behavior."],"^14",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",38,"^V",4,"^W",38,"^X",11,"^1K","^17","^Y","Takes a function f from values in s to a new EventStream.\n     Returns an EventStream containinig values from all underlying streams combined.","^1?",["^10",["^1@",["^10",[["~$s","~$f"]]]]]],"^1K","^17","^@","~$respondent.core/flatmap","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",11,"^1E",["^10",[["~$s","~$f"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",31,"^W",38,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$s","~$f"]]]]],"^Y","Takes a function f from values in s to a new EventStream.\n     Returns an EventStream containinig values from all underlying streams combined."],"~$->EventStream",["^ ","^1>",null,"^S",["^ ","^23",["^<",["^1L","^17"]],"^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^X",21,"^V",10,"^2:","^2;","^U",61,"^W",61,"^1?",["^10",["^1@",["^10",[["~$channel","~$multiple","~$completed"]]]]],"^26",null,"^Y","Positional factory function for respondent.core/EventStream."],"^23",["^<",["^1L","^17"]],"^@","~$respondent.core/->EventStream","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",21,"^1E",["^10",[["^2?","^2@","^2A"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^2:","^2;","^U",61,"^W",61,"^1D",3,"^1I",true,"^1?",["^10",["^1@",["^10",[["^2?","^2@","^2A"]]]]],"^26",null,"^Y","Positional factory function for respondent.core/EventStream."],"~$IBehavior",["^ ","^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",14,"^V",14,"^W",14,"^X",23,"^Y",null,"^Z",true,"^[",["^10",["@interface"]],"^11",["^ ","^12",["^ ","~$sample",[["~$b","~$interval"]]]]],"^Z",true,"^@","^29","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",23,"^V",1,"^U",14,"^11",["^ ","^12",["^ ","^2D",[["~$b","^2E"]]]],"^18",null,"^W",14,"^19","^1:","^1;",["^<",["~$respondent.core/Behavior"]],"^Y",null,"^[",["^10",["@interface"]]],"^9",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",28,"^V",11,"^W",28,"^X",19,"~:macro",true,"^1?",["^10",["^1@",["^10",[["~$&","~$body"]]]]],"^1B",["^ ","^1C",true,"^1D",2,"^1E",[["^10",["~$&form","~$&env","^2H"]]],"^1?",["^10",[["^2I","^2J","~$&","^2H"]]],"^1F",["^10",[null]]]],"^@","~$respondent.core/behavior","^1C",true,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",19,"^1B",["^ ","^1C",true,"^1D",2,"^1E",[["^10",["^2I","^2J","^2H"]]],"^1?",["^10",[["^2I","^2J","~$&","^2H"]]],"^1F",["^10",[null]]],"^1E",[["^10",["^2I","^2J","^2H"]]],"^1H",null,"^1F",["^10",[null]],"^V",1,"^U",28,"^2G",true,"^W",28,"^1D",2,"^1I",false,"^1?",["^10",[["^2I","^2J","~$&","^2H"]]]],"~$Behavior",["^ ","^22",1,"^23",["^<",["^28","^29"]],"^@","^2F","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",18,"^24",true,"^V",10,"^U",20,"^25",false,"^W",20,"^26",["^<",["^28"]]],"~$EventStream",["^ ","^22",3,"^23",["^<",["^1L","^17"]],"^@","^1<","^T","resources/public/js/compiled/out/respondent/core.cljc","^X",21,"^24",true,"^V",10,"^U",61,"^25",false,"^W",61,"^26",null],"^2D",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",15,"^V",4,"^W",15,"^X",10,"^1K","^29","^Y","Turns this Behavior into an EventStream from the sampled values at the given interval","^1?",["^10",["^1@",["^10",[["~$b","^2E"]]]]]],"^1K","^29","^@","~$respondent.core/sample","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",10,"^1E",["^10",[["~$b","^2E"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",14,"^W",15,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$b","^2E"]]]]],"^Y","Turns this Behavior into an EventStream from the sampled values at the given interval"],"^?",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",35,"^V",4,"^W",35,"^X",10,"^1K","^17","^Y","Returns a new stream containing the items from s\n     for which pred returns true","^1?",["^10",["^1@",["^10",[["~$s","^13"]]]]]],"^1K","^17","^@","~$respondent.core/filter","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",10,"^1E",["^10",[["~$s","^13"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",31,"^W",35,"^1D",2,"^1I",true,"^1?",["^10",["^1@",["^10",[["~$s","^13"]]]]],"^Y","Returns a new stream containing the items from s\n     for which pred returns true"],"~$->Token",["^ ","^1>",null,"^S",["^ ","^23",["^<",["^1S"]],"^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^X",15,"^V",10,"^2:","^2;","^U",54,"^W",54,"^1?",["^10",["^1@",["^10",[["^1A"]]]]],"^26",null,"^Y","Positional factory function for respondent.core/Token."],"^23",["^<",["^1S"]],"^@","~$respondent.core/->Token","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",15,"^1E",["^10",[["^1A"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^2:","^2;","^U",54,"^W",54,"^1D",1,"^1I",true,"^1?",["^10",["^1@",["^10",[["^1A"]]]]],"^26",null,"^Y","Positional factory function for respondent.core/Token."],"^1Q",["^ ","^1>",null,"^S",["^ ","^T","/home/fx/work/Clojure Reactive Programming/ch05/respondent-app/resources/public/js/compiled/out/respondent/core.cljc","^U",51,"^V",4,"^W",51,"^X",11,"^1K","^1S","^Y","Called when the subscriber isn't interested in receiving more items","^1?",["^10",["^1@",["^10",[["^1R"]]]]]],"^1K","^1S","^@","~$respondent.core/dispose","^1C",false,"^T","resources/public/js/compiled/out/respondent/core.cljc","^X",11,"^1E",["^10",[["^1R"]]],"^1H",null,"^1F",["^10",[null,null]],"^V",1,"^U",50,"^W",51,"^1D",1,"^1I",true,"^1?",["^10",["^1@",["^10",[["^1R"]]]]],"^Y","Called when the subscriber isn't interested in receiving more items"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^:","^:","^7","^7","^C","^D","^D","^D"],"~:cljs.analyzer/constants",["^ ","~:seen",["^<",["~:respondent.core/complete","~:else","~:recur","~$do","^2A","~$fn*","^2?","^2@","^1A","~$Behavior.","~$f"]],"~:order",["~$f","^30","^2[","^2Z","^1A","^2Y","^2X","^2W","^2?","^2@","^2A"]],"^Y",null]
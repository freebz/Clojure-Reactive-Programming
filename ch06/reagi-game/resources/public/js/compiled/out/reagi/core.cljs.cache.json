["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Date",["^ ","~$prototype",["^ ","~$getTime",["^ "]]],"~$Object",["^ "],"~$undefined",["^ "],"~$Error",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros","~$go-loop","^;","~$behavior","~$reagi.core"],"~:excludes",["~#set",["~$reduce","~$map","~$mapcat","~$deliver","~$remove","~$cycle","~$time","~$merge","~$flatten","~$filter","~$count","~$constantly"]],"~:name","^>","~:imports",null,"~:requires",["^ ","~$core","~$cljs.core","^Q","^Q","~$a","~$cljs.core.async","^R","^R"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^R","~$>!","^R"],"~:defs",["^ ","~$unbox",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","~:line",27,"~:column",4,"~:end-line",27,"~:end-column",9,"~:protocol","~$reagi.core/Boxed","~:doc","Unbox a boxed value.","~:arglists",["~#list",["~$quote",["^18",[["~$x"]]]]]],"^14","^15","^M","~$reagi.core/unbox","~:variadic",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",9,"~:method-params",["^18",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^11",1,"^10",26,"^12",27,"~:max-fixed-arity",1,"~:fn-var",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Unbox a boxed value."],"~$complete?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",18,"^11",4,"^12",18,"^13",13,"^14","~$reagi.core/Signal","^16","True if the signal's value will no longer change.","^17",["^18",["^19",["^18",[["~$signal"]]]]]],"^14","^1B","^M","~$reagi.core/complete?","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[["^1C"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",17,"^12",18,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1C"]]]]],"^16","True if the signal's value will no longer change."],"^A",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",382,"^11",7,"^12",382,"^13",13,"^17",["^18",["^19",["^18",[["~$f","~$stream"],["~$f","~$init","^1E"]]]]],"^16","Create a new stream by applying a function to the previous return value and\n  the current value of the source stream.","~:top-fn",["^ ","^1;",false,"^1?",3,"^1<",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^17",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^1>",["^18",[null,null]]]],"^M","~$reagi.core/reduce","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1G",["^ ","^1;",false,"^1?",3,"^1<",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^17",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^1>",["^18",[null,null]]],"^1<",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",382,"^12",382,"^1?",3,"^1@",true,"^17",["^18",[["~$f","^1E"],["~$f","^1F","^1E"]]],"^16","Create a new stream by applying a function to the previous return value and\n  the current value of the source stream."],"~$->t_reagi$core24798",["^ ","^Y",null,"^Z",["^ ","~:anonymous",true,"~:protocols",["^@",["^15","~$cljs.core/IMeta","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^@",["^1L","^1M"]],"~:factory","~:positional","^17",["^18",["^19",["^18",[["~$x","~$meta24799"]]]]],"^16","Positional factory function for reagi.core/t_reagi$core24798.","^[",null],"^1K",["^@",["^15","^1L","^1M"]],"^M","~$reagi.core/->t_reagi$core24798","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^1<",["^18",[["~$x","^1Q"]]],"^1=",null,"^1>",["^18",[null,null]],"^1J",true,"^11",5,"^1O","^1P","^10",47,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["~$x","^1Q"]]]]],"^1N",["^@",["^1L","^1M"]],"^16","Positional factory function for reagi.core/t_reagi$core24798."],"~$deref-events",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",177,"^11",8,"^12",177,"^13",20,"~:private",true,"^17",["^18",["^19",["^18",[["~$head"]]]]]],"^1T",true,"^M","~$reagi.core/deref-events","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",20,"^1<",["^18",[["^1U"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",177,"^12",177,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1U"]]]]]],"~$->t_reagi$core24802",["^ ","^Y",null,"^Z",["^ ","^1J",true,"^1K",["^@",["~$cljs.core.async/Mult","^1L","~$cljs.core.async/Mux","^1M"]],"^1N",["^@",["^1L","^1M"]],"^1O","^1P","^17",["^18",["^19",["^18",[["~$ch","~$state","~$meta24803"]]]]],"^16","Positional factory function for reagi.core/t_reagi$core24802.","^[",null],"^1K",["^@",["^1X","^1L","^1Y","^1M"]],"^M","~$reagi.core/->t_reagi$core24802","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^1<",["^18",[["^1Z","^1[","^20"]]],"^1=",null,"^1>",["^18",[null,null]],"^1J",true,"^11",11,"^1O","^1P","^10",113,"^1?",3,"^1@",true,"^17",["^18",["^19",["^18",[["^1Z","^1[","^20"]]]]],"^1N",["^@",["^1L","^1M"]],"^16","Positional factory function for reagi.core/t_reagi$core24802."],"~$close-all!",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",288,"^11",8,"^12",288,"^13",18,"^1T",true,"^17",["^18",["^19",["^18",[["~$chs"]]]]]],"^1T",true,"^M","~$reagi.core/close-all!","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^1<",["^18",[["^23"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",288,"^12",288,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^23"]]]]]],"~$time-ms",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",445,"^11",8,"^12",445,"^13",15,"^1T",true,"^17",["^18",["^19",["^18",[[]]]]]],"^1T",true,"^M","~$reagi.core/time-ms","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",15,"^1<",["^18",[[]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",445,"^12",445,"^1?",0,"^1@",true,"^17",["^18",["^19",["^18",[[]]]]]],"~$subscribe",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",277,"^11",7,"^12",277,"^13",16,"^17",["^18",["^19",["^18",[["^1E","~$channel"]]]]],"^16","Deliver events on an event stream to a core.async channel. Returns the\n  channel.\n\n  The events from the stream cannot include nil. The channel will be closed when\n  the event stream is complete."],"^M","~$reagi.core/subscribe","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^1<",["^18",[["^1E","^28"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",277,"^12",277,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^1E","^28"]]]]],"^16","Deliver events on an event stream to a core.async channel. Returns the\n  channel.\n\n  The events from the stream cannot include nil. The channel will be closed when\n  the event stream is complete."],"~$Disposable",["^ ","~:no-doc",true,"^Z",["^ ","^2;",true,"~:protocol-symbol",true,"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",33,"^11",23,"^10",182,"~:protocol-info",["^ ","~:methods",["^ ","~$dispose",[["~$x"]],"~$on-dispose",[["~$x","~$f"]]]],"^12",182,"^16",null,"~:jsdoc",["^18",["@interface"]]],"^2<",true,"^M","~$reagi.core/Disposable","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",33,"^11",1,"^10",182,"^2=",["^ ","^2>",["^ ","^2?",[["~$x"]],"^2@",[["~$x","~$f"]]]],"~:info",null,"^12",182,"~:tag","~$any","~:impls",["^@",["~$reagi.core/Events"]],"^16",null,"^2A",["^18",["@interface"]]],"^B",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",352,"^11",7,"^12",352,"^13",10,"^17",["^18",["^19",["^18",[["~$f","~$&","~$streams"]]]]],"^16","Map a function over a stream.","^1G",["^ ","^1;",true,"^1?",1,"^1<",[["^18",["~$f","^2H"]]],"^17",["^18",[["~$f","~$&","^2H"]]],"^1>",["^18",[null]]]],"^M","~$reagi.core/map","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",10,"^1G",["^ ","^1;",true,"^1?",1,"^1<",[["^18",["~$f","^2H"]]],"^17",["^18",[["~$f","~$&","^2H"]]],"^1>",["^18",[null]]],"^1<",[["^18",["~$f","^2H"]]],"^1=",null,"^1>",["^18",[null]],"^11",1,"^10",352,"^12",352,"^1?",1,"^1@",true,"^17",["^18",[["~$f","~$&","^2H"]]],"^16","Map a function over a stream."],"~$->Events",["^ ","^Y",null,"^Z",["^ ","^1K",["^@",["~$cljs.core/IFn","~$cljs.core/IPending","^1B","~$cljs.core/IDeref","^2B","~$reagi.core/Observable"]],"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^11",10,"^1O","^1P","^10",190,"^12",190,"^17",["^18",["^19",["^18",[["^1Z","~$mult","^1U","~$closed","~$disposers"]]]]],"^1N",["^@",["^2K","^2L","^2M"]],"^16","Positional factory function for reagi.core/Events."],"^1K",["^@",["^2K","^2L","^1B","^2M","^2B","^2N"]],"^M","~$reagi.core/->Events","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^1<",["^18",[["^1Z","^2O","^1U","^2P","^2Q"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^1O","^1P","^10",190,"^12",190,"^1?",5,"^1@",true,"^17",["^18",["^19",["^18",[["^1Z","^2O","^1U","^2P","^2Q"]]]]],"^1N",["^@",["^2K","^2L","^2M"]],"^16","Positional factory function for reagi.core/Events."],"^C",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",341,"^11",7,"^12",341,"^13",13,"^17",["^18",["^19",["^18",[["~$f","^1E"],["~$f","^1E","~$&","^2H"]]]]],"^16","Mapcat a function over a stream.","^1G",["^ ","^1;",true,"^1?",2,"^1<",["^18",[["~$f","^1E"]]],"^17",["^18",[["~$f","^1E"],["~$f","^1E","~$&","^2H"]]],"^1>",["^18",[null,null]]]],"^M","~$reagi.core/mapcat","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1G",["^ ","^1;",true,"^1?",2,"^1<",["^18",[["~$f","^1E"]]],"^17",["^18",[["~$f","^1E"],["~$f","^1E","~$&","^2H"]]],"^1>",["^18",[null,null]]],"^1<",["^18",[["~$f","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",341,"^12",341,"^1?",2,"^1@",true,"^17",["^18",[["~$f","^1E"],["~$f","^1E","~$&","^2H"]]],"^16","Mapcat a function over a stream."],"~$Boxed",["^ ","^2;",true,"^Z",["^ ","^2;",true,"^2<",true,"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",28,"^11",23,"^10",26,"^2=",["^ ","^2>",["^ ","^X",[["~$x"]]]],"^12",26,"^16",null,"^2A",["^18",["@interface"]]],"^2<",true,"^M","^15","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",28,"^11",1,"^10",26,"^2=",["^ ","^2>",["^ ","^X",[["~$x"]]]],"^2C",null,"^12",26,"^2D","^2E","^2F",["^@",["~$reagi.core/t_reagi$core24798","~$default","~$reagi.core/Completed"]],"^16",null,"^2A",["^18",["@interface"]]],"~$join",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",505,"^11",7,"^12",505,"^13",11,"^17",["^18",["^19",["^18",[["~$&","^2H"]]]]],"^16","Join several streams together. Events are delivered from the first stream\n  until it is completed, then the next stream, until all streams are complete.","^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]]],"^M","~$reagi.core/join","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",11,"^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]],"^1<",[["^18",["^2H"]]],"^1=",null,"^1>",["^18",[null]],"^11",1,"^10",505,"^12",505,"^1?",0,"^1@",true,"^17",["^18",[["~$&","^2H"]]],"^16","Join several streams together. Events are delivered from the first stream\n  until it is completed, then the next stream, until all streams are complete."],"~$buffer",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",408,"^11",7,"^12",408,"^13",13,"^17",["^18",["^19",["^18",[["^1E"],["~$n","^1E"]]]]],"^16","Buffer all the events in the stream. A maximum buffer size may be specified,\n  in which case the buffer will contain only the last n items. It's recommended\n  that a buffer size is specified, otherwise the buffer will grow without limit.","^1G",["^ ","^1;",false,"^1?",2,"^1<",["^18",[["^1E"],["~$n","^1E"]]],"^17",["^18",[["^1E"],["~$n","^1E"]]],"^1>",["^18",[null,null]]]],"^M","~$reagi.core/buffer","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1G",["^ ","^1;",false,"^1?",2,"^1<",["^18",[["^1E"],["~$n","^1E"]]],"^17",["^18",[["^1E"],["~$n","^1E"]]],"^1>",["^18",[null,null]]],"^1<",["^18",[["^1E"],["~$n","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",408,"^12",408,"^1?",2,"^1@",true,"^17",["^18",[["^1E"],["~$n","^1E"]]],"^16","Buffer all the events in the stream. A maximum buffer size may be specified,\n  in which case the buffer will contain only the last n items. It's recommended\n  that a buffer size is specified, otherwise the buffer will grow without limit."],"~$run-sampler",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",468,"^11",8,"^12",468,"^13",19,"^1T",true,"^17",["^18",["^19",["^18",[["~$ref","~$interval","~$stop","~$out"]]]]]],"^1T",true,"^M","~$reagi.core/run-sampler","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",19,"^1<",["^18",[["^31","^32","^33","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",468,"^12",468,"^1?",4,"^1@",true,"^17",["^18",["^19",["^18",[["^31","^32","^33","^34"]]]]]],"^D",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",267,"^11",7,"^12",267,"^13",14,"^17",["^18",["^19",["^18",[["^1E","~$&","~$msgs"]]]]],"^16","Deliver one or more messages to an event stream.","^1G",["^ ","^1;",true,"^1?",2,"^1<",["^18",[["^1E"],["^1E","~$msg"]]],"^17",["^18",[["^1E"],["^1E","^37"],["^1E","^37","~$&","^36"]]],"^1>",["^18",[null,null,null]]]],"^M","~$reagi.core/deliver","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1G",["^ ","^1;",true,"^1?",2,"^1<",["^18",[["^1E"],["^1E","^37"]]],"^17",["^18",[["^1E"],["^1E","^37"],["^1E","^37","~$&","^36"]]],"^1>",["^18",[null,null,null]]],"^1<",["^18",[["^1E"],["^1E","^37"]]],"^1=",null,"^1>",["^18",[null,null,null]],"^11",1,"^10",267,"^12",267,"^1?",2,"^1@",true,"^17",["^18",[["^1E"],["^1E","^37"],["^1E","^37","~$&","^36"]]],"^16","Deliver one or more messages to an event stream."],"^E",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",362,"^11",7,"^12",362,"^13",13,"^17",["^18",["^19",["^18",[["~$pred","^1E"]]]]],"^16","Remove all items in a stream the predicate matches."],"^M","~$reagi.core/remove","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[["^39","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",362,"^12",362,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^39","^1E"]]]]],"^16","Remove all items in a stream the predicate matches."],"~$mapcat-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",333,"^11",8,"^12",333,"^13",17,"^1T",true,"^17",["^18",["^19",["^18",[["~$f","~$in","^34"]]]]]],"^1T",true,"^M","~$reagi.core/mapcat-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",17,"^1<",["^18",[["~$f","^3<","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",333,"^12",333,"^1?",3,"^1@",true,"^17",["^18",["^19",["^18",[["~$f","^3<","^34"]]]]]],"~$Completed",["^ ","~:num-fields",1,"^1K",["^@",["^15"]],"^M","^2W","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",19,"~:type",true,"^11",10,"^10",29,"~:record",false,"^12",29,"^1N",null],"^F",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",438,"^11",7,"^12",438,"^13",12,"^17",["^18",["^19",["^18",[["~$values","^1E"]]]]],"^16","Incoming events cycle a sequence of values. Useful for switching between\n  states."],"^M","~$reagi.core/cycle","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",12,"^1<",["^18",[["^3B","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",438,"^12",438,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^3B","^1E"]]]]],"^16","Incoming events cycle a sequence of values. Useful for switching between\n  states."],"~$->Completed",["^ ","^Y",null,"^Z",["^ ","^1K",["^@",["^15"]],"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",19,"^11",10,"^1O","^1P","^10",29,"^12",29,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^1N",null,"^16","Positional factory function for reagi.core/Completed."],"^1K",["^@",["^15"]],"^M","~$reagi.core/->Completed","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",19,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^1O","^1P","^10",29,"^12",29,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^1N",null,"^16","Positional factory function for reagi.core/Completed."],"~$signal?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",21,"^11",7,"^12",21,"^13",14,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","True if the object is a behavior or event stream."],"^M","~$reagi.core/signal?","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",21,"^12",21,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","True if the object is a behavior or event stream."],"~$t_reagi$core24802",["^ ","^3?",3,"^1K",["^@",["^1X","^1L","^1Y","^1M"]],"^M","~$reagi.core/t_reagi$core24802","^[","resources/public/js/compiled/out/reagi/core.cljs","^3@",true,"^1J",true,"^11",11,"^10",113,"^3A",false,"^1N",["^@",["^1L","^1M"]]],"~$Events",["^ ","^3?",5,"^1K",["^@",["^2K","^2L","^1B","^2M","^2B","^2N"]],"^M","^2G","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^3@",true,"^11",10,"^10",190,"^3A",false,"^12",190,"^1N",["^@",["^2K","^2L","^2M"]]],"~$mult*",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",108,"^11",8,"^12",108,"^13",13,"^1T",true,"^17",["^18",["^19",["^18",[["^1Z"]]]]],"^16","A version of clojure.core.async/mult that fixes ASYNC-64.\n  This can be removed once a fix is released for core.async."],"^1T",true,"^M","~$reagi.core/mult*","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[["^1Z"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",108,"^12",108,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1Z"]]]]],"^16","A version of clojure.core.async/mult that fixes ASYNC-64.\n  This can be removed once a fix is released for core.async."],"~$uniq-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",420,"^11",8,"^12",420,"^13",15,"^1T",true,"^17",["^18",["^19",["^18",[["^3<","^34"]]]]]],"^1T",true,"^M","~$reagi.core/uniq-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",15,"^1<",["^18",[["^3<","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",420,"^12",420,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^3<","^34"]]]]]],"~$completed",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",35,"^11",7,"^12",35,"^13",16,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Wraps x to guarantee that it will be the last value in a behavior or event\n  stream. The value of x will be cached, and any values after x will be\n  ignored."],"^M","~$reagi.core/completed","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",35,"^12",35,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Wraps x to guarantee that it will be the last value in a behavior or event\n  stream. The value of x will be cached, and any values after x will be\n  ignored."],"~$events",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",234,"^11",7,"^12",234,"^13",13,"^17",["^18",["^19",["^18",[[],["^1F"]]]]],"^16","Create a referential stream of events. An initial value may optionally be\n  supplied, otherwise the stream will be unrealized until the first value is\n  pushed to it. Event streams will deref to the latest value pushed to the\n  stream.","^1G",["^ ","^1;",false,"^1?",1,"^1<",["^18",[[],["^1F"]]],"^17",["^18",[[],["^1F"]]],"^1>",["^18",[null,null]]]],"^M","~$reagi.core/events","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1G",["^ ","^1;",false,"^1?",1,"^1<",["^18",[[],["^1F"]]],"^17",["^18",[[],["^1F"]]],"^1>",["^18",[null,null]]],"^1<",["^18",[[],["^1F"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",234,"^12",234,"^1?",1,"^1@",true,"^17",["^18",[[],["^1F"]]],"^16","Create a referential stream of events. An initial value may optionally be\n  supplied, otherwise the stream will be unrealized until the first value is\n  pushed to it. Event streams will deref to the latest value pushed to the\n  stream."],"~$->Behavior",["^ ","^Y",null,"^Z",["^ ","^1K",["^@",["^1B","^2M"]],"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^11",10,"^1O","^1P","^10",59,"^12",59,"^17",["^18",["^19",["^18",[["~$func","~$cache"]]]]],"^1N",["^@",["^2M"]],"^16","Positional factory function for reagi.core/Behavior."],"^1K",["^@",["^1B","^2M"]],"^M","~$reagi.core/->Behavior","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^1<",["^18",[["^3T","^3U"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^1O","^1P","^10",59,"^12",59,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^3T","^3U"]]]]],"^1N",["^@",["^2M"]],"^16","Positional factory function for reagi.core/Behavior."],"~$box",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",42,"^11",7,"^12",42,"^13",10,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Box a value to ensure it can be sent through a channel."],"^M","~$reagi.core/box","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",10,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",42,"^12",42,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Box a value to ensure it can be sent through a channel."],"^G",["^ ","^M","~$reagi.core/time","^[","resources/public/js/compiled/out/reagi/core.cljs","^10",85,"^11",1,"^12",85,"^13",10,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",85,"^11",6,"^12",85,"^13",10],"^16","A behavior that tracks the current time in seconds.","^2D","^2E"],"~$join-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",497,"^11",8,"^12",497,"^13",15,"^1T",true,"^17",["^18",["^19",["^18",[["^23","^34"]]]]]],"^1T",true,"^M","~$reagi.core/join-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",15,"^1<",["^18",[["^23","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",497,"^12",497,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^23","^34"]]]]]],"~$no-value",["^ ","^M","~$reagi.core/no-value","^[","resources/public/js/compiled/out/reagi/core.cljs","^10",227,"^11",1,"^12",227,"^13",24,"^1T",true,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",227,"^11",16,"^12",227,"^13",24,"^1T",true],"^2D","~$object"],"~$accum",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",399,"^11",7,"^12",399,"^13",12,"^17",["^18",["^19",["^18",[["^1F","^1E"]]]]],"^16","Change an initial value based on an event stream of functions."],"^M","~$reagi.core/accum","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",12,"^1<",["^18",[["^1F","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",399,"^12",399,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^1F","^1E"]]]]],"^16","Change an initial value based on an event stream of functions."],"~$Behavior",["^ ","^3?",2,"^1K",["^@",["^1B","^2M"]],"^M","~$reagi.core/Behavior","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^3@",true,"^11",10,"^10",59,"^3A",false,"^12",59,"^1N",["^@",["^2M"]]],"~$port",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",97,"^11",4,"^12",97,"^13",8,"^14","^2N","^16","Return a write-only core.async channel. Any elements send to the port will\n    be distributed to the listener channels in parallel. Each listener must\n    accept before the next item is distributed.","^17",["^18",["^19",["^18",[["~$ob"]]]]]],"^14","^2N","^M","~$reagi.core/port","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",8,"^1<",["^18",[["^48"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",96,"^12",97,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^48"]]]]],"^16","Return a write-only core.async channel. Any elements send to the port will\n    be distributed to the listener channels in parallel. Each listener must\n    accept before the next item is distributed."],"~$no-value?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",231,"^11",8,"^12",231,"^13",17,"^1T",true,"^17",["^18",["^19",["^18",[["~$x"]]]]]],"^1T",true,"^M","~$reagi.core/no-value?","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",17,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",231,"^12",231,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]]],"~$no-op",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",225,"^11",8,"^12",225,"^13",13,"^1T",true,"^17",["^18",["^19",["^18",[[]]]]]],"^1T",true,"^M","~$reagi.core/no-op","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[[]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",225,"^12",225,"^1?",0,"^1@",true,"^17",["^18",["^19",["^18",[[]]]]]],"~$behavior-call",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",68,"^11",7,"^12",68,"^13",20,"^17",["^18",["^19",["^18",[["^3T"]]]]],"^16","Takes a zero-argument function and yields a Behavior object that will\n  evaluate the function each time it is dereferenced. See: behavior."],"^M","~$reagi.core/behavior-call","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",20,"^1<",["^18",[["^3T"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",68,"^12",68,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^3T"]]]]],"^16","Takes a zero-argument function and yields a Behavior object that will\n  evaluate the function each time it is dereferenced. See: behavior."],"^H",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",298,"^11",7,"^12",298,"^13",12,"^17",["^18",["^19",["^18",[["~$&","^2H"]]]]],"^16","Combine multiple streams into one. All events from the input streams are\n  pushed to the returned stream.","^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]]],"^M","~$reagi.core/merge","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",12,"^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]],"^1<",[["^18",["^2H"]]],"^1=",null,"^1>",["^18",[null]],"^11",1,"^10",298,"^12",298,"^1?",0,"^1@",true,"^17",["^18",[["~$&","^2H"]]],"^16","Combine multiple streams into one. All events from the input streams are\n  pushed to the returned stream."],"~$flatten-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",515,"^11",8,"^12",515,"^13",18,"^1T",true,"^17",["^18",["^19",["^18",[["^3<","~$valve","^34"]]]]]],"^1T",true,"^M","~$reagi.core/flatten-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^1<",["^18",[["^3<","^4B","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",515,"^12",515,"^1?",3,"^1@",true,"^17",["^18",["^19",["^18",[["^3<","^4B","^34"]]]]]],"~$uniq",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",429,"^11",7,"^12",429,"^13",11,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Remove any successive duplicates from the stream."],"^M","~$reagi.core/uniq","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",11,"^1<",["^18",[["^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",429,"^12",429,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Remove any successive duplicates from the stream."],"~$zip-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",308,"^11",8,"^12",308,"^13",14,"^1T",true,"^17",["^18",["^19",["^18",[["~$ins","^34"]]]]]],"^1T",true,"^M","~$reagi.core/zip-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1<",["^18",[["^4G","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",308,"^12",308,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^4G","^34"]]]]]],"~$reduce-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",372,"^11",8,"^12",372,"^13",17,"^1T",true,"^17",["^18",["^19",["^18",[["~$f","^1F","^3<","^34"]]]]]],"^1T",true,"^M","~$reagi.core/reduce-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",17,"^1<",["^18",[["~$f","^1F","^3<","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",372,"^12",372,"^1?",4,"^1@",true,"^17",["^18",["^19",["^18",[["~$f","^1F","^3<","^34"]]]]]],"^I",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",530,"^11",7,"^12",530,"^13",14,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Flatten a stream of streams into a stream that contains all the values of\n  its components."],"^M","~$reagi.core/flatten","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1<",["^18",[["^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",530,"^12",530,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Flatten a stream of streams into a stream that contains all the values of\n  its components."],"~$sample",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",479,"^11",7,"^12",479,"^13",13,"^17",["^18",["^19",["^18",[["~$interval-ms","~$reference"]]]]],"^16","Turn a reference into an event stream by deref-ing it at fixed intervals.\n  The interval time is specified in milliseconds."],"^M","~$reagi.core/sample","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[["^4M","^4N"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",479,"^12",479,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^4M","^4N"]]]]],"^16","Turn a reference into an event stream by deref-ing it at fixed intervals.\n  The interval time is specified in milliseconds."],"~$listen-all",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",292,"^11",8,"^12",292,"^13",18,"^1T",true,"^17",["^18",["^19",["^18",[["^2H"]]]]]],"^1T",true,"^M","~$reagi.core/listen-all","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",18,"^1<",["^18",[["^2H"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",292,"^12",292,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^2H"]]]]]],"~$connect-port",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",295,"^11",8,"^12",295,"^13",20,"^1T",true,"^17",["^18",["^19",["^18",[["^1E","~$f","~$&","~$args"]]]]],"^1G",["^ ","^1;",true,"^1?",2,"^1<",[["^18",["^1E","~$f","^4S"]]],"^17",["^18",[["^1E","~$f","~$&","^4S"]]],"^1>",["^18",[null]]]],"^1T",true,"^M","~$reagi.core/connect-port","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",20,"^1G",["^ ","^1;",true,"^1?",2,"^1<",[["^18",["^1E","~$f","^4S"]]],"^17",["^18",[["^1E","~$f","~$&","^4S"]]],"^1>",["^18",[null]]],"^1<",[["^18",["^1E","~$f","^4S"]]],"^1=",null,"^1>",["^18",[null]],"^11",1,"^10",295,"^12",295,"^1?",2,"^1@",true,"^17",["^18",[["^1E","~$f","~$&","^4S"]]]],"~$depend-on",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",163,"^11",8,"^12",163,"^13",17,"^1T",true,"^17",["^18",["^19",["^18",[["~$parent","~$children"]]]]],"^16","Protect a collection of child objects from being GCed before the parent."],"^1T",true,"^M","~$reagi.core/depend-on","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",17,"^1<",["^18",[["^4V","^4W"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",163,"^12",163,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^4V","^4W"]]]]],"^16","Protect a collection of child objects from being GCed before the parent."],"^J",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",357,"^11",7,"^12",357,"^13",13,"^17",["^18",["^19",["^18",[["^39","^1E"]]]]],"^16","Filter a stream by a predicate."],"^M","~$reagi.core/filter","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",13,"^1<",["^18",[["^39","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",357,"^12",357,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^39","^1E"]]]]],"^16","Filter a stream by a predicate."],"~$listen",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",101,"^11",4,"^12",101,"^13",10,"^14","^2N","^16","Add a listener channel to the observable. The channel will be closed\n    when the port of the observable is closed. Returns the channel.\n\n    Any events sent to the channel will be boxed to protect the channel from\n    nils. To listen for unboxed events, use subscribe.","^17",["^18",["^19",["^18",[["^48","^1Z"]]]]]],"^14","^2N","^M","~$reagi.core/listen","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",10,"^1<",["^18",[["^48","^1Z"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",96,"^12",101,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^48","^1Z"]]]]],"^16","Add a listener channel to the observable. The channel will be closed\n    when the port of the observable is closed. Returns the channel.\n\n    Any events sent to the channel will be boxed to protect the channel from\n    nils. To listen for unboxed events, use subscribe."],"~$empty-queue",["^ ","^M","~$reagi.core/empty-queue","^[","resources/public/js/compiled/out/reagi/core.cljs","^10",404,"^11",1,"^12",404,"^13",27,"^1T",true,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",404,"^11",16,"^12",404,"^13",27,"^1T",true]],"~$behavior?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",80,"^11",7,"^12",80,"^13",16,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Return true if the object is a behavior."],"^M","~$reagi.core/behavior?","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",16,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",80,"^12",80,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Return true if the object is a behavior."],"~$Signal",["^ ","^2;",true,"^Z",["^ ","^2;",true,"^2<",true,"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",29,"^11",23,"^10",17,"^2=",["^ ","^2>",["^ ","^1A",[["^1C"]]]],"^12",17,"^16",null,"^2A",["^18",["@interface"]]],"^2<",true,"^M","^1B","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",29,"^11",1,"^10",17,"^2=",["^ ","^2>",["^ ","^1A",[["^1C"]]]],"^2C",null,"^12",17,"^2D","^2E","^2F",["^@",["^2G","^46"]],"^16",null,"^2A",["^18",["@interface"]]],"~$zip",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",322,"^11",7,"^12",322,"^13",10,"^17",["^18",["^19",["^18",[["~$&","^2H"]]]]],"^16","Combine multiple streams into one. On an event from any input stream, a\n  vector will be pushed to the returned stream containing the latest events\n  of all input streams.","^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]]],"^M","~$reagi.core/zip","^1;",true,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",10,"^1G",["^ ","^1;",true,"^1?",0,"^1<",[["^18",["^2H"]]],"^17",["^18",[["~$&","^2H"]]],"^1>",["^18",[null]]],"^1<",[["^18",["^2H"]]],"^1=",null,"^1>",["^18",[null]],"^11",1,"^10",322,"^12",322,"^1?",0,"^1@",true,"^17",["^18",[["~$&","^2H"]]],"^16","Combine multiple streams into one. On an event from any input stream, a\n  vector will be pushed to the returned stream containing the latest events\n  of all input streams."],"~$Observable",["^ ","^2;",true,"^Z",["^ ","^2;",true,"^2<",true,"^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^13",33,"^11",23,"^10",96,"^2=",["^ ","^2>",["^ ","^47",[["^48"]],"^4Z",[["^48","^1Z"]]]],"^12",96,"^16",null,"^2A",["^18",["@interface"]]],"^2<",true,"^M","^2N","^[","resources/public/js/compiled/out/reagi/core.cljs","^13",33,"^11",1,"^10",96,"^2=",["^ ","^2>",["^ ","^47",[["^48"]],"^4Z",[["^48","^1Z"]]]],"^2C",null,"^12",96,"^2D","^2E","^2F",["^@",["^2G"]],"^16",null,"^2A",["^18",["@interface"]]],"^K",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",394,"^11",7,"^12",394,"^13",12,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Return an accumulating count of the items in a stream."],"^M","~$reagi.core/count","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",12,"^1<",["^18",[["^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",394,"^12",394,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^1E"]]]]],"^16","Return an accumulating count of the items in a stream."],"~$delta",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",90,"^11",7,"^12",90,"^13",12,"^17",["^18",["^19",["^18",[[]]]]],"^16","Return a behavior that tracks the time in seconds from when it was created."],"^M","~$reagi.core/delta","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",12,"^1<",["^18",[[]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",90,"^12",90,"^1?",0,"^1@",true,"^17",["^18",["^19",["^18",[[]]]]],"^16","Return a behavior that tracks the time in seconds from when it was created."],"~$throttle-ch",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",449,"^11",8,"^12",449,"^13",19,"^1T",true,"^17",["^18",["^19",["^18",[["~$timeout-ms","^3<","^34"]]]]]],"^1T",true,"^M","~$reagi.core/throttle-ch","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",19,"^1<",["^18",[["^5<","^3<","^34"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",449,"^12",449,"^1?",3,"^1@",true,"^17",["^18",["^19",["^18",[["^5<","^3<","^34"]]]]]],"~$once",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",262,"^11",7,"^12",262,"^13",11,"^17",["^18",["^19",["^18",[["~$value"]]]]],"^16","Create a completed event stream for a single value."],"^M","~$reagi.core/once","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",11,"^1<",["^18",[["^5?"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",262,"^12",262,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^5?"]]]]],"^16","Create a completed event stream for a single value."],"~$events?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",257,"^11",7,"^12",257,"^13",14,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Return true if the object is a stream of events."],"^M","~$reagi.core/events?","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",257,"^12",257,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Return true if the object is a stream of events."],"~$t_reagi$core24798",["^ ","^3?",2,"^1K",["^@",["^15","^1L","^1M"]],"^M","^2U","^[","resources/public/js/compiled/out/reagi/core.cljs","^3@",true,"^1J",true,"^11",5,"^10",47,"^3A",false,"^1N",["^@",["^1L","^1M"]]],"^L",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",367,"^11",7,"^12",367,"^13",17,"^17",["^18",["^19",["^18",[["^5?","^1E"]]]]],"^16","Constantly map the same value over an event stream."],"^M","~$reagi.core/constantly","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",17,"^1<",["^18",[["^5?","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",367,"^12",367,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^5?","^1E"]]]]],"^16","Constantly map the same value over an event stream."],"~$wait",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",488,"^11",7,"^12",488,"^13",11,"^17",["^18",["^19",["^18",[["^25"]]]]],"^16","Returns a channel that will complete unrealized after specified number of\n  milliseconds."],"^M","~$reagi.core/wait","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",11,"^1<",["^18",[["^25"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",488,"^12",488,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["^25"]]]]],"^16","Returns a channel that will complete unrealized after specified number of\n  milliseconds."],"^2?",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",183,"^11",4,"^12",183,"^13",11,"^14","^2B","^16","Clean up any resources an object has before it goes out of scope. In\n    Clojure this is called automatically when the object is finalized. In\n    ClojureScript this must be called manually.","^17",["^18",["^19",["^18",[["~$x"]]]]]],"^14","^2B","^M","~$reagi.core/dispose","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",11,"^1<",["^18",[["~$x"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",182,"^12",183,"^1?",1,"^1@",true,"^17",["^18",["^19",["^18",[["~$x"]]]]],"^16","Clean up any resources an object has before it goes out of scope. In\n    Clojure this is called automatically when the object is finalized. In\n    ClojureScript this must be called manually."],"~$throttle",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",458,"^11",7,"^12",458,"^13",15,"^17",["^18",["^19",["^18",[["^5<","^1E"]]]]],"^16","Remove any events in a stream that occur too soon after the prior event.\n  The timeout is specified in milliseconds."],"^M","~$reagi.core/throttle","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",15,"^1<",["^18",[["^5<","^1E"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",458,"^12",458,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["^5<","^1E"]]]]],"^16","Remove any events in a stream that occur too soon after the prior event.\n  The timeout is specified in milliseconds."],"^2@",["^ ","^Y",null,"^Z",["^ ","^[","/home/fx/work/Clojure Reactive Programming/ch06/reagi-game/resources/public/js/compiled/out/reagi/core.cljs","^10",187,"^11",4,"^12",187,"^13",14,"^14","^2B","^16","Add a function to be called when the object is disposed.","^17",["^18",["^19",["^18",[["~$x","~$f"]]]]]],"^14","^2B","^M","~$reagi.core/on-dispose","^1;",false,"^[","resources/public/js/compiled/out/reagi/core.cljs","^13",14,"^1<",["^18",[["~$x","~$f"]]],"^1=",null,"^1>",["^18",[null,null]],"^11",1,"^10",182,"^12",187,"^1?",2,"^1@",true,"^17",["^18",["^19",["^18",[["~$x","~$f"]]]]],"^16","Add a function to be called when the object is disposed."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^>","^>","^;","^;","~$a","^R","^R","^R"],"~:cljs.analyzer/constants",["^ ","~:seen",["^@",["~$x","~:else","^2P","^20","^2Q","~:recur","^3T","^1[","^1Z","^1U","^3U","^1Q","^2O"]],"~:order",["~$x","^1Q","^3T","^3U","^1Z","^1[","^20","^5P","^5O","^2O","^1U","^2P","^2Q"]],"^16","Functions and types for functional reactive programming."]